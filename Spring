Spring Vs Spring Boot
Spring is Lightweight framework widely used to devlope enterprise Application,it helps to create loosedly coupled application, before spring came in picture, reduce time to market
Spring boot- build on top of conventional spring framework, wieldly used to develop enterprise level application with Rest API s and CURD, Spring Boot provide 


life cycle Spring bean
 Container start and contair stop between depncies--- application.conntext.xml bean factory ---> setbeanname Instance creation-object ----> depencies injected
init method called---> in xml 
IOC-Design principle Controller for object creation--> control of object creation taken from application give to fraework, in cpntrast like class--> Spring container responsible creation and life cycle of beans
right time , right depencies injected, loosely coupled,Concept
Car class->Engine class
create object in car ---> inject engine object
Common design patterns--> Singletone design pattern--> by defulte
One instance of bean per Container. scope of spring
one instance per
Customized Configuration---> Prototype scope---> each call specifice bean created.
Factory design pattern---> Away to abstract process of creation managment, Factory manage life cycle, No logic revel to outside
Spring IOC----> Car was Class
IOC container is factory, Java configuration Object/ bean creation, factory bean, fatory method
DI-loose Coupling between classes, None objcet depend on other
Template Method pattern-Java mail sender template,JDBC or Hibernate all common things are there, JDBC trmplate, Manging Transcation,define structural flow of object.


